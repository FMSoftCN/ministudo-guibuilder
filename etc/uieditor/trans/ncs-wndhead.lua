
local function ncs_id2name(id)
	local x = string.gsub(id, "ID_(%w+)", "%1")
	return string.gsub(x or id, "(%w+)_?", function(w)
		return string.upper(string.sub(w,0,1)) .. string.lower(string.sub(w,2))
		end)
end

function ncs_wnd_head(mainwnd_list, filename, startwnd)
	
	--print("filename :" .. tostring(filename))
	--print("startwnd :" .. tostring(startwnd))
	--print("mainwnd  :" .. tostring(mainwnd_list))
	--table.foreach(mainwnd_list, print)

	local f = io.open(filename,"w")
	if f == nil then
		return
	end
	
	local strhead=[[
/**
 * This file includes all the declaration of ncs windows.
 *
 * Please don't modify it.
 * 
 * This file is autogenerated by mStudio.
 *
 * NOTE: ANY WORD WRITTEN BY USER WOULD BE DELETE BY MSTUDIO !
 *
 */

#ifndef NCS_MAINWNDS_H
#define NCS_MAINWNDS_H

#ifdef __cpluspus
extern "C" {
#endif

/**
 * If you want to export these ncs main window function
 * to other libraries, please predefined marco NCS_WND_EXPORT, 
 */
#ifndef NCS_WND_EXPORT
#define NCS_WND_EXPORT
#endif

/**
 * If you want to pass a speical structure pointer by 'user_data'
 * to a main window, please modify the ncs-window-types.h.
 *
 */
#include "ncs-window-types.h"


]]
	f:write(strhead)

	-- out the functions
	local func_format=[[

/** define the function for %s */
extern NCS_WND_EXPORT 
mMainWnd * ntCreate%sEx(HPACKAGE package, HWND hParent, HICON h_icon, HMENU h_menu, DWORD user_dat);
#define ntCreate%s(package, hParent, user_data) \
	ntCreate%sEx(package, hParent, (HICON)0, (HMENU)0, (DWORD)(user_data))

]]
	for k,v in pairs(mainwnd_list) do
		local name = ncs_id2name(v)
		f:write(string.format(func_format,
				v,  name, name, name))
	end

	-- out start wnd
	if startwnd then
		f:write(string.format([[

/** define the start window */
#define ntStartWindowEx  ntCreate%sEx
#define ntStartWindow(package, hParent, user_data) \
	ntStartWindowEx(package, hParent, (HICON)0, (HMENU)0, (DWORD)(user_data))

]], ncs_id2name(startwnd)))
	end

	-- out end
	f:write([[

#ifdef __cplusplus
}
#endif

#endif /* end of window list */

]])
	f:close()
end
